public static Node AVLdelete(Node srs , Node ide ){
        System.out.println("jjjjjj");
        if (srs == null){
            return srs;
        }
        if(srs.data < ide.data ){
            System.out.println("nnn");
            srs.right = AVLdelete(srs.right , ide);
        }
        else {
            System.out.println("fghfg");
            if(srs.data > ide.data){
                System.out.println("kkk");
                srs.left = AVLdelete(srs.left , ide);
            }
            else {
                if(srs.left == null || srs.right == null){
                    System.out.println("hgfh");
                    if(srs.left == null){
                        System.out.println("jjjjjjjj");
                        if(srs.right == null){
                            System.out.println("vvvv");
                            srs = null;
                        }else {
                            srs = srs.right;
                        }
                    }
                    else {
                        srs = srs.left;
                    }
                }
                else {
                    System.out.println("gmmbn");
                    Node node1 = srs.right;
                    while(node1.left != null){
                        node1 = node1.left;
                    }
                    srs.data = node1.data;
                    srs.child = node1.child;
                    srs.parent = node1.parent;
                    srs.level = node1.level;

                    srs.right = AVLdelete(srs.right ,node1);
                    if (srs.right !=null){
                        System.out.println(srs.right.data);
                    }

                }
            }
        }
        System.out.println("llllllllllll");
        if (srs == null){
            return srs;
        }

        if(height(srs.left) > height(srs.right)){
            srs.high = height(srs.left) +1 ;
            System.out.println(srs.high);
        }else {
            srs.high = height(srs.right) +1 ;
            System.out.println(srs.high);
        }

        int srsBF ;
        System.out.println("111");
        srsBF = height(srs.left)-height(srs.right);
        if (srs.right != null){
            System.out.println(srs.right.data);
        }
        System.out.println(height(srs.right));

        if(srsBF<-1){
            int srsBf1 = 0;
            if(srs.right != null){
                srsBf1 = height(srs.right.left)-height(srs.right.right);
            }
            if(srsBf1 <= 0){
                return lr(srs);
            }
            else {
                srs.right = rr(srs.right);
                return lr(srs);
            }
        }
        System.out.println(srsBF);
        if(srsBF >1){
            System.out.println("jj");
            int srsBf2 = 0;
            if(srs.left != null){
                srsBf2 = height(srs.left.left)-height(srs.left.right);
            }
            if( srsBf2 >= 0){
                return rr(srs);
            }else {
                srs.left = lr(srs.left);
                return rr(srs);
            }
        }
        return srs;
    }